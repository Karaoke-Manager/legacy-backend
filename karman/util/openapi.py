__all__ = ["remove_body_schemas", "remove_hidden_responses"]

from fastapi import FastAPI


def remove_body_schemas(app: FastAPI) -> None:
    """
    Removes automatically generated schemas for endpoints that accept form encoded data.
    This solution is inspired by https://github.com/tiangolo/fastapi/issues/1442.

    The main reason one might want to do this is to clean up the OpenAPI schema
    generated by FastAPI because by default the auto-generated schemas are named
    Body_<function>_<path>_<method> which is inconsistent to other schemas.
    """

    openapi_schema = app.openapi()
    # Move autogenerated Body_ schemas.
    # See https://github.com/tiangolo/fastapi/issues/1442
    for path in openapi_schema["paths"].values():
        for method_data in path.values():
            if "requestBody" in method_data:
                for content_type, content in method_data["requestBody"][
                    "content"
                ].items():
                    if content_type in [
                        "multipart/form-data",
                        "application/x-www-form-urlencoded",
                    ]:
                        schema_name = content["schema"]["$ref"].lstrip(
                            "#/components/schemas/"
                        )
                        schema_data = openapi_schema["components"]["schemas"].pop(
                            schema_name
                        )
                        content["schema"] = schema_data
    app.openapi_schema = openapi_schema


def remove_hidden_responses(app: FastAPI) -> None:
    """
    Modifies the OpenAPI schema of `app` by removing responses that have
    `include_in_schemaÂ´ set to `False`. This provides a way to hide the default 422
    responses in the API docs.
    """
    openapi_schema = app.openapi()
    for path in openapi_schema["paths"].values():
        for method_data in path.values():
            for code in list(method_data["responses"]):
                response = method_data["responses"][code]
                if response.get("include_in_schema") is False:
                    del method_data["responses"][code]
            # Also hide responses in callback routes
            for callback in method_data.get("callbacks", {}).values():
                for callback_path in callback.values():
                    for callback_method_data in callback_path.values():
                        for code in list(callback_method_data["responses"]):
                            response = callback_method_data["responses"][code]
                            if response.get("include_in_schema") is False:
                                del callback_method_data["responses"][code]
